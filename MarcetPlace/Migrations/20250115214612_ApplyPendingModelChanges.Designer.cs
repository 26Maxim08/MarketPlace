// <auto-generated />
using MarketPlace.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;

#nullable disable

namespace MarcetPlace.Migrations
{
    [DbContext(typeof(ApplicationDbContext))]
    [Migration("20250115214612_ApplyPendingModelChanges")]
    partial class ApplyPendingModelChanges
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "9.0.1")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            NpgsqlModelBuilderExtensions.UseIdentityByDefaultColumns(modelBuilder);

            modelBuilder.Entity("MarketPlace.Models.customer", b =>
                {
                    b.Property<int>("customerid")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("customerid"));

                    b.Property<string>("email")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("firstname")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("lastname")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("phone")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("customerid");

                    b.ToTable("customers");
                });

            modelBuilder.Entity("MarketPlace.Models.order", b =>
                {
                    b.Property<int>("orderid")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("orderid"));

                    b.Property<int>("customerid")
                        .HasColumnType("integer");

                    b.Property<string>("deliveryaddress")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("paymentmethod")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("orderid");

                    b.HasIndex("customerid");

                    b.ToTable("orders");
                });

            modelBuilder.Entity("MarketPlace.Models.orderitem", b =>
                {
                    b.Property<int>("orderid")
                        .HasColumnType("integer");

                    b.Property<int>("productid")
                        .HasColumnType("integer");

                    b.Property<int>("quantity")
                        .HasColumnType("integer");

                    b.HasKey("orderid", "productid");

                    b.HasIndex("productid");

                    b.ToTable("orderitems");
                });

            modelBuilder.Entity("MarketPlace.Models.product", b =>
                {
                    b.Property<int>("productid")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("productid"));

                    b.Property<string>("description")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("image")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("nameproduct")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<decimal>("price")
                        .HasColumnType("numeric");

                    b.Property<int>("stockquantity")
                        .HasColumnType("integer");

                    b.HasKey("productid");

                    b.ToTable("products");
                });

            modelBuilder.Entity("MarketPlace.Models.order", b =>
                {
                    b.HasOne("MarketPlace.Models.customer", "customer")
                        .WithMany()
                        .HasForeignKey("customerid")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("customer");
                });

            modelBuilder.Entity("MarketPlace.Models.orderitem", b =>
                {
                    b.HasOne("MarketPlace.Models.order", "order")
                        .WithMany("orderitems")
                        .HasForeignKey("orderid")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("MarketPlace.Models.product", "product")
                        .WithMany("orderitems")
                        .HasForeignKey("productid")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("order");

                    b.Navigation("product");
                });

            modelBuilder.Entity("MarketPlace.Models.order", b =>
                {
                    b.Navigation("orderitems");
                });

            modelBuilder.Entity("MarketPlace.Models.product", b =>
                {
                    b.Navigation("orderitems");
                });
#pragma warning restore 612, 618
        }
    }
}
